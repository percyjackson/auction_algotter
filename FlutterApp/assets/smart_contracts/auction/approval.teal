#pragma version 8
intcblock 0 1 4
bytecblock 0x686967686573745f626964646572 0x6173615f6964 0x61756374696f6e5f656e64 0x686967686573745f626964 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x2adc0060 // "opt_in(asset)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0xf0aa7023 // "start_auction(uint64,uint64,axfer)void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x39042aee // "bid(pay,account)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x1ec12bef // "claim_asset(asset)void"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub claimasset_4
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 4
txn GroupIndex
intc_1 // 1
-
store 3
load 3
gtxns TypeEnum
intc_1 // pay
==
assert
load 3
load 4
callsub bid_3
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 2
btoi
store 1
txn GroupIndex
intc_1 // 1
-
store 2
load 2
gtxns TypeEnum
intc_2 // axfer
==
assert
load 0
load 1
load 2
callsub startauction_2
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub optin_1
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_1 // "asa_id"
intc_0 // 0
app_global_put
bytec_2 // "auction_end"
intc_0 // 0
app_global_put
bytec_3 // "highest_bid"
intc_0 // 0
app_global_put
bytec_0 // "highest_bidder"
bytec 4 // ""
app_global_put
retsub

// opt_in
optin_1:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_1 // "asa_id"
app_global_get
intc_0 // 0
==
assert
bytec_1 // "asa_id"
frame_dig -1
txnas Assets
app_global_put
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
txnas Assets
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// start_auction
startauction_2:
proto 3 0
bytec_2 // "auction_end"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
gtxns AssetReceiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns XferAsset
bytec_1 // "asa_id"
app_global_get
==
assert
bytec_3 // "highest_bid"
frame_dig -2
app_global_put
bytec_2 // "auction_end"
global LatestTimestamp
frame_dig -3
+
app_global_put
retsub

// bid
bid_3:
proto 2 0
global LatestTimestamp
bytec_2 // "auction_end"
app_global_get
<
assert
frame_dig -2
gtxns Amount
bytec_3 // "highest_bid"
app_global_get
>
assert
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -2
gtxns Sender
txn Sender
==
assert
bytec_0 // "highest_bidder"
app_global_get
bytec 4 // ""
!=
bz bid_3_l2
itxn_begin
intc_1 // pay
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
bytec_0 // "highest_bidder"
app_global_get
itxn_field Receiver
bytec_3 // "highest_bid"
app_global_get
itxn_field Amount
itxn_submit
bid_3_l2:
bytec_3 // "highest_bid"
frame_dig -2
gtxns Amount
app_global_put
bytec_0 // "highest_bidder"
frame_dig -2
gtxns Sender
app_global_put
retsub

// claim_asset
claimasset_4:
proto 1 0
global LatestTimestamp
bytec_2 // "auction_end"
app_global_get
>=
assert
txn Sender
bytec_0 // "highest_bidder"
app_global_get
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_1 // 1
itxn_field AssetAmount
bytec_1 // "asa_id"
app_global_get
itxn_field XferAsset
bytec_0 // "highest_bidder"
app_global_get
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
itxn_submit
retsub